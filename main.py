import sqlite3
import locale
import re
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service as ChromeService
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.common.by import By
import time
import datetime
from tqdm import tqdm


def setup_driver():
    locale.setlocale(locale.LC_TIME, 'ru_RU.UTF-8')
    options = Options()
    options.add_argument("--headless")
    options.add_argument('--no-sandbox')
    options.add_argument('--disable-gpu')
    options.add_argument('--disable-dev-shm-usage')
    options.add_argument('--start-maximized')

    driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=options)
    driver.implicitly_wait(7)
    return driver


def get_links(url: str, driver) -> dict:
    link_dict = {}
    driver.get(url)

    elements = driver.find_elements(By.CSS_SELECTOR, ".dropdown__content.typography a")

    for element in elements:
        link = element.get_attribute('href')
        description = element.get_attribute('text')
        link_dict[description] = link
    print('–°—Å—ã–ª–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã')

    return link_dict


def add_smiley_to_audience_and_teacher(text):
    text = re.sub(r'(\b[–û–ß–ü–ì]-\S+\b)', r'\nüè¢\1', text)  # –î–æ–±–∞–≤–ª—è–µ–º —Å–º–∞–π–ª–∏–∫ –ø–µ—Ä–µ–¥ –Ω–æ–º–µ—Ä–æ–º –∞—É–¥–∏—Ç–æ—Ä–∏–∏
    text = re.sub(r'([–ê-–Ø][–∞-—è]{1,20}\s[–ê-–Ø]\.[–ê-–Ø]\.)', r'üë®‚Äçüè´\1',
                  text)  # –î–æ–±–∞–≤–ª—è–µ–º —Å–º–∞–π–ª–∏–∫ –ø–µ—Ä–µ–¥ –∏–º–µ–Ω–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
    return text

def add_timetable_to_database(timetable_dict, faculty):
    conn = sqlite3.connect('timetable.db', timeout=60)
    cursor = conn.cursor()
    
    for description_day, subject in timetable_dict.items():
        check_date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        description, day_of_week = description_day.split(' // ')
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å—å –¥–ª—è –¥–∞–Ω–Ω–æ–π –¥–∞—Ç—ã, –≥—Ä—É–ø–ø—ã –∏ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞
        cursor.execute("""SELECT ID, –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ FROM Schedule WHERE
                            –î–∞—Ç–∞=? AND –ì—Ä—É–ø–ø–∞=? AND –§–∞–∫—É–ª—å—Ç–µ—Ç=?""", 
                        (day_of_week, description, faculty))
        result = cursor.fetchone()

        if subject:
            if result:
                schedule_id = result[0]
                cursor.execute("""UPDATE Schedule SET –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ=?, –î–∞—Ç–∞_–ø—Ä–æ–≤–µ—Ä–∫–∏=? WHERE ID=?""",
                                (subject, check_date, schedule_id))
            else:
                # –ï—Å–ª–∏ –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é, –≤–∫–ª—é—á–∞—è –î–∞—Ç—É_–ø—Ä–æ–≤–µ—Ä–∫–∏
                cursor.execute("""INSERT INTO Schedule (–î–∞—Ç–∞, –ì—Ä—É–ø–ø–∞, –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –§–∞–∫—É–ª—å—Ç–µ—Ç, –î–∞—Ç–∞_–ø—Ä–æ–≤–µ—Ä–∫–∏) 
                                VALUES (?, ?, ?, ?, ?)""", 
                            (day_of_week, description, subject, faculty, check_date))
        
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    conn.commit()
    conn.close()

def get_timetable(link_dict, driver, faculty):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    timetable_dict = {}
    subject_list = []
    first = True
    college_schedule = {
        1: "8.00 ‚Äì 9.30",
        2: "9.40 ‚Äì 11.10",
        3: "11.40 ‚Äì 13.10",
        4: "13.20 ‚Äì 14.50",
        5: "15.00 ‚Äì 16.30",
        6: "17.00 ‚Äì 18.30",
        7: "18.40 ‚Äì 20.10",
        8: "20.20 ‚Äì 21.50"
    }

    faculty_schedule = {
        1: "8.00 ‚Äì 9.20",
        2: "9.40 ‚Äì 11.00",
        3: "11.30 ‚Äì 12.50",
        4: "13.10 ‚Äì 14.30",
        5: "14.50 ‚Äì 16.10",
        6: "16.40 ‚Äì 18.00",
        7: "18.20 ‚Äì 19.40",
        8: "20.00 ‚Äì 21.20"
    }

    full_days = {'–ü–Ω–¥': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
                 '–í—Ç—Ä': '–í—Ç–æ—Ä–Ω–∏–∫',
                 '–°—Ä–¥': '–°—Ä–µ–¥–∞', 
                 '–ß—Ç–≤': '–ß–µ—Ç–≤–µ—Ä–≥', 
                 '–ü—Ç–Ω': '–ü—è—Ç–Ω–∏—Ü–∞', 
                 '–°–±—Ç': '–°—É–±–±–æ—Ç–∞'
                 }
    
    
    time_schedule = faculty_schedule if '—Ñ–∞–∫—É–ª—å—Ç–µ—Ç' in faculty.lower() else college_schedule

    for description, link in tqdm(link_dict.items(), desc="–ü–∞—Ä—Å–∏–Ω–≥ —Å—Å—ã–ª–æ–∫", unit="link"):
        driver.get(link)
        tables = driver.find_elements(By.TAG_NAME, 'table')
        for table in tqdm(tables, desc="–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü", leave=False):
            for row in table.find_elements(By.TAG_NAME, 'tr')[1:]:
                # –ò–∑–≤–ª–µ–∫–∞–µ–º —è—á–µ–π–∫–∏ –∏–∑ —Å—Ç—Ä–æ–∫–∏
                cells = row.find_elements(By.TAG_NAME, 'td')
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —è—á–µ–µ–∫
                day_of_week = cells[0].text
                if day_of_week != '–í—Ä–µ–º—è':
                    day_of_week = day_of_week.replace(',', ', ')
                    for short_day, full_day in full_days.items():
                        day_of_week = day_of_week.replace(short_day, full_day)
                    for num in range(1, len(cells)):
                        subject = cells[num].text
                        if subject != '' and subject != '_':
                            if first:
                                subject_list.append(
                                    f'üìÖ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {day_of_week}\n\nüï∞{time_schedule[num]}\nüìñ{subject}')
                                first = False
                            else:
                                subject_list.append(f'üï∞{time_schedule[num]}\nüìñ{subject}')
                    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–º–∞–π–ª–∏–∫–æ–≤
                    subject_list = [add_smiley_to_audience_and_teacher(event) for event in subject_list]
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–∞, –∞ —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–Ω–∞—á–µ–Ω–∏—è
                    timetable_dict[description + ' // ' + day_of_week] = '\n\n'.join(subject_list)
                    subject_list = []
                    first = True
                

    if timetable_dict:
        add_timetable_to_database(timetable_dict, faculty)

if __name__ == "__main__":
    driver = setup_driver()
    url = 'https://orel.ranepa.ru/raspisanie/raspisanie-gosudarstvennoe-i-munitsipalnoe-upravlenie/'
    links = []
    while not links:
        links = get_links(url, driver)
        time.sleep(5)
    get_timetable(links, driver, "–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç")
