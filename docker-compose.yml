version: '3'

services:
  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - schedule-net

  worker1:
    build: .
    restart: always
    command: celery -A celery_config worker --loglevel=info --concurrency=1 -Q queue1 -n worker1@%h
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - schedule-net
    volumes:
      - ./:/app

  worker2:
    build: .
    restart: always
    command: celery -A celery_config worker --loglevel=info --concurrency=1 -Q queue1 -n worker2@%h
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - schedule-net
    volumes:
      - ./:/app

  worker3:
    build: .
    restart: always
    command: celery -A celery_config worker --loglevel=info --concurrency=1 -Q queue1 -n worker3@%h
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - schedule-net
    volumes:
      - ./:/app
  worker4:
    build: .
    restart: always
    command: celery -A celery_config worker --loglevel=info --concurrency=1 -Q queue1 -n worker4@%h
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - schedule-net
    volumes:
      - ./:/app

  worker5:
    build: .
    restart: always
    command: celery -A celery_config worker --loglevel=info --concurrency=1 -Q queue1 -n worker5@%h
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - schedule-net
    volumes:
      - ./:/app

  flower:
    build: .
    restart: always
    command: celery -A celery_config flower --port=5555
    depends_on:
      - redis
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    networks:
      - schedule-net

  send_task:
    build: .
    restart: always
    command: >
      bash -c "sleep 10 && 
               while true; do 
                 python send_task.py;
                 sleep 1800; 
               done"
    depends_on:
        - redis
    networks:
      - schedule-net

  telegram_bot:
    build: .
    restart: always
    command: python bot.py
    networks:
      - schedule-net
    volumes:
      - ./:/app

networks:
  schedule-net:
    driver: bridge
